microservices:
  graphene-chrome:
    docker:
      dockerfile: './Dockerfile_chrome'
      customTags:
        - '87.0.4280.88-87.0.4280.88'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_chrome'
    tests:
      isolated:
        dockerComposePath: './docker-compose-chrome-acceptance-test.yaml'
        artifacts:
          - '**/target/screenshots/**'
          - '**/target/downloads/**'
          - '**/target/videos/**'
          - '**/target/media/video/**/**_failed.mp4'
        junitArtifacts:
          - '**/target/surefire-reports/*.xml'
  graphene-firefox:
    docker:
      dockerfile: './Dockerfile_firefox'
      customTags:
        - '84.0.1-0.28.0'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_firefox'
    tests:
      isolated:
        dockerComposePath: './docker-compose-firefox-acceptance-test.yaml'
        artifacts:
          - '**/target/screenshots/**'
          - '**/target/videos/**'
          - '**/target/downloads/**'
          - '**/target/media/video/**/**_failed.mp4'
        junitArtifacts:
          - '**/target/surefire-reports/*.xml'
  graphene-edge:
    docker:
      dockerfile: './Dockerfile_edge'
      customTags:
        - '89.0.774.4-89.0.774.4'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
        - 'Dockerfile_edge'
    tests:
      isolated:
        dockerComposePath: './docker-compose-edge-acceptance-test.yaml'
        artifacts:
          - '**/target/screenshots/**'
          - '**/target/videos/**'
          - '**/target/downloads/**'
          - '**/target/media/video/**/**_failed.mp4'
          - '**/Downloads/**'
        junitArtifacts:
          - '**/target/surefire-reports/*.xml'
  graphene-chrome-uisdk:
    docker:
      dockerfile: './Dockerfile_chrome_uisdk'
      customTags:
        - '12.18.3'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_chrome_uisdk'
  graphene-firefox-uisdk:
    docker:
      dockerfile: './Dockerfile_firefox_uisdk'
      customTags:
        - '12.18.3'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_firefox_uisdk'
  graphene-chrome-rubysdk:
    docker:
      dockerfile: './Dockerfile_chrome_rubysdk'
      customTags:
        - '2.1.3'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_chrome_rubysdk'
  graphene-firefox-rubysdk:
    docker:
      dockerfile: './Dockerfile_firefox_rubysdk'
      customTags:
        - '2.1.3'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_firefox_rubysdk'

integratedTests:
  - kind: 'image'
    env: bash
    path: .
    vault:
      QA_TEST_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-user"
      SNOWFLAKE_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-snowflake-user"
      BIGQUERY_PRIVATE_KEY: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-bigquery-user"
      REDSHIFT_USER_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-redshift-user"
      REDSHIFT_USER_PASSWORD_IAM: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-redshift-iam"
    args:
      - '--shm-size=2g'
      - '-v $HOME/.m2:/tmp/.m2'
      - '-v $(pwd):/graphene-tests'
      - '-w /graphene-tests'
      - '-e'
      - 'HOME=/graphene-tests'
    command: >-
      ./integration-mvn-test.sh
      -Dtest.execution.env=local-firefox
      -DfirefoxDriverBinaryPath=/bin/geckodriver
      -pl ui-tests-msf/ui-tests-modeler
      -Dtest.module=ui-tests-msf/ui-tests-modeler
      -Dtestng.suite.xml=testng-msf-web-modeler-ii.xml
      -DbigqueryClientEmail=gdc-bigquery-pipe@gdc-us-dev.iam.gserviceaccount.com
      -DbigqueryPrivateKey="$BIGQUERY_PRIVATE_KEY"
      -DsnowflakePassword="$SNOWFLAKE_PASSWORD"
      -DsnowflakeUserName=autoqasnowflake
      -DsnowflakeJdbcUrl=jdbc:snowflake://gooddata.snowflakecomputing.com
      -DredshiftPassword="$REDSHIFT_USER_PASSWORD"
      -DredshiftUserName=qatest
      -DredshiftJdbcUrl=jdbc:redshift://explorer.cbrgkmwhlu9v.us-east-2.redshift.amazonaws.com:5439/dev
      -DredshiftIAMSecretKey="$REDSHIFT_IAM_SECRET_KEY"
      -DredshiftIAMDbUser=redshiftdevunloader
      -DredshiftIAMAccessKey=AKIA4JVILUMKHRJ3ZB5W
      -DredshiftJdbcIAMLongUrl=jdbc:redshift:iam://explorer.cbrgkmwhlu9v.us-east-2.redshift.amazonaws.com:5439/dev
      -DredshiftJdbcIAMShortUrl=jdbc:redshift:iam://explorer:us-east-2/dev
      -Dhost=staging.intgdc.com
      -Duser=qa+test@gooddata.com
      -Dpassword="$QA_TEST_PASSWORD"
      -Duser.domain=default
      -Dproject.authorizationToken=pgtestingauto01
      -Dproject.dwhDriver=pg -DdeleteMode=delete_if_successful
      -DuseDynamicUser=true
    image: harbor.intgdc.com/staging/graphene-firefox:latest
    artifacts:
      - '**/target/screenshots/**'
      - '**/target/videos/**'
      - '**/target/media/video/**/**_failed.mp4'
    junitArtifacts:
      - '**/target/surefire-reports/*.xml'
    microservices:
      - ldm-modeler
      - msf-load-restapi
  - kind: 'image'
    env: bash
    path: .
    vault:
      QA_TEST_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-user"
      QA_PROJECT_TOKEN: "$VAULT_SPECIAL_PREFIX/gooddata-stg-project-token"
      SNOWFLAKE_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-snowflake-user"
      BIGQUERY_PRIVATE_KEY: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-bigquery-user"
      REDSHIFT_USER_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-redshift-user"
      REDSHIFT_IAM_SECRET_KEY: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-redshift-iam"
    args:
      - '--shm-size=2g'
      - '-v $HOME/.m2:/tmp/.m2'
      - '-v $(pwd):/graphene-tests'
      - '-w /graphene-tests'
      - '-e'
      - 'HOME=/graphene-tests'
    command: >-
      ./integration-mvn-test.sh
      -Dtest.execution.env=local-chrome
      -DchromeDriverBinaryPath=/bin/chromedriver
      -DchromeDriverArguments=no-sandbox
      -pl ui-tests-msf/ui-tests-datasourceapp
      -Dhost=staging.intgdc.com
      -Duser=qa+test@gooddata.com
      -Dpassword="$QA_TEST_PASSWORD"
      -Dtestng.suite.xml=testng-datasourceapp.xml
      -DbigqueryClientEmail=gdc-bigquery-pipe@gdc-us-dev.iam.gserviceaccount.com
      -DbigqueryPrivateKey="$BIGQUERY_PRIVATE_KEY"
      -DsnowflakePassword="$SNOWFLAKE_PASSWORD"
      -DsnowflakeUserName=autoqasnowflake
      -DsnowflakeJdbcUrl=jdbc:snowflake://gooddata.snowflakecomputing.com
      -DredshiftPassword="$REDSHIFT_USER_PASSWORD"
      -DredshiftUserName=qatest
      -DredshiftJdbcUrl=jdbc:redshift://explorer.cbrgkmwhlu9v.us-east-2.redshift.amazonaws.com:5439/dev
      -DredshiftIAMSecretKey="$REDSHIFT_IAM_SECRET_KEY"
      -DredshiftIAMDbUser=redshiftdevunloader
      -DredshiftIAMAccessKey=AKIA4JVILUMKHRJ3ZB5W
      -DredshiftJdbcIAMLongUrl=jdbc:redshift:iam://explorer.cbrgkmwhlu9v.us-east-2.redshift.amazonaws.com:5439/dev
      -DredshiftJdbcIAMShortUrl=jdbc:redshift:iam://explorer:us-east-2/dev
      -Duser.domain=default
      -Dproject.authorizationToken="$QA_PROJECT_TOKEN"
      -Dproject.dwhDriver=pg -DdeleteMode=delete_if_successful
      -DuseDynamicUser=true
    image: harbor.intgdc.com/staging/graphene-chrome:latest
    artifacts:
      - '**/target/screenshots/**'
      - '**/target/videos/**'
      - '**/target/media/video/**/**_failed.mp4'
    junitArtifacts:
      - '**/target/surefire-reports/*.xml'
    microservices:
      - datasource-management
  - kind: 'image'
    env: bash
    path: .
    vault:
      QA_TEST_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-user"
      QA_PROJECT_TOKEN: "$VAULT_SPECIAL_PREFIX/gooddata-stg-project-token"
      SNOWFLAKE_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-snowflake-user"
      BIGQUERY_PRIVATE_KEY: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-bigquery-user"
      REDSHIFT_USER_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-redshift-user"
      REDSHIFT_USER_PASSWORD_IAM: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-redshift-iam"
    args:
      - '--shm-size=2g'
      - '-v $HOME/.m2:/tmp/.m2'
      - '-v $(pwd):/graphene-tests'
      - '-w /graphene-tests'
      - '-e'
      - 'HOME=/graphene-tests'
    image: harbor.intgdc.com/staging/graphene-chrome:latest
    command: >-
      ./integration-mvn-test.sh
      -Dtest.execution.env=local-chrome
      -DchromeDriverBinaryPath=/bin/chromedriver
      -DchromeDriverArguments=no-sandbox
      -pl ui-tests-core,ui-tests-msf/ui-tests-add,ui-tests-msf/ui-tests-addv2
      -Dhost=staging.intgdc.com
      -Duser=qa+test@gooddata.com
      -Dpassword="$QA_TEST_PASSWORD"
      -Duser.domain=default
      -Dproject.authorizationToken="$QA_PROJECT_TOKEN"
      -Ddss.authorizationToken=stgdssnew
      -DsnowflakeUserName=autoqasnowflake
      -DsnowflakePassword="$SNOWFLAKE_PASSWORD"
      -DsnowflakeJdbcUrl=jdbc:snowflake://gooddata.snowflakecomputing.com
      -Dproject.dwhDriver=pg -DdeleteMode=delete_if_successful
      -DuseDynamicUser=true
      -Dnet.snowflake.jdbc.temporaryCredentialCacheDir=./.cache/snowflake
      -Dnet.snowflake.jdbc.ocspResponseCacheDir=./.cache/ocsp_response_cache
      -Dtestng.suite.xml=testng-metadata-wdp.xml
    artifacts:
      - '**/target/screenshots/**'
      - '**/target/videos/**'
      - '**/target/media/video/**/**_failed.mp4'
    junitArtifacts:
      - '**/target/surefire-reports/*.xml'
    microservices:
      - metadata-wdp
  - kind: 'image'
    env: bash
    path: .
    vault:
      QA_TEST_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-user"
      QA_PROJECT_TOKEN: "$VAULT_SPECIAL_PREFIX/gooddata-stg-project-token"
    args:
      - '--shm-size=2g'
      - '-v $HOME/.m2:/tmp/.m2'
      - '-v $(pwd):/graphene-tests'
      - '-w /graphene-tests'
      - '-e'
      - 'HOME=/graphene-tests'
    image: harbor.intgdc.com/staging/graphene-chrome:latest
    command: >-
      ./integration-mvn-test.sh
      -Dtest.execution.env=local-chrome
      -DchromeDriverBinaryPath=/bin/chromedriver
      -DchromeDriverArguments=no-sandbox
      -pl ui-tests-core,ui-tests-indigo/ui-tests-dashboards
      -Dhost=staging.intgdc.com
      -Duser=qa+test@gooddata.com
      -Dpassword="$QA_TEST_PASSWORD"
      -Duser.domain=default
      -Dproject.authorizationToken="$QA_PROJECT_TOKEN"
      -Dproject.dwhDriver=pg -DdeleteMode=delete_if_successful
      -DuseDynamicUser=true
      -Dtestng.suite.xml=testng-exporter-service.xml
    artifacts:
      - '**/target/screenshots/**'
      - '**/target/downloads/**'
      - '**/target/videos/**'
      - '**/target/media/video/**/**_failed.mp4'
    junitArtifacts:
      - '**/target/surefire-reports/*.xml'
    microservices:
      - visual-exporter-service
